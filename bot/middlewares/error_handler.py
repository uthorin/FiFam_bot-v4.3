# bot/middlewares/error_handler.py
import logging
from aiogram import BaseMiddleware
from aiogram.types import Message, CallbackQuery
from aiogram.exceptions import TelegramNetworkError
from typing import Callable, Any, Dict

logger = logging.getLogger(__name__)

class GlobalErrorHandler(BaseMiddleware):
    async def __call__(
        self,
        handler: Callable[[Any, Dict[str, Any]], Any],
        event: Any,
        data: Dict[str, Any]
    ) -> Any:
        try:
            return await handler(event, data)

        except TelegramNetworkError as e:
            logger.error("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ Telegram: %s", e)
            try:
                if isinstance(event, Message):
                    await event.answer("‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")
                elif isinstance(event, CallbackQuery):
                    await event.message.answer("‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")
            except Exception as inner_e:
                logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ: %s", inner_e)

        except Exception as e:
            logger.exception("–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:")
            try:
                if isinstance(event, Message):
                    await event.answer("üö® –ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞. –ú—ã —É–∂–µ —Ä–∞–∑–±–∏—Ä–∞–µ–º—Å—è.")
                elif isinstance(event, CallbackQuery):
                    await event.message.answer("üö® –ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞. –ú—ã —É–∂–µ —Ä–∞–∑–±–∏—Ä–∞–µ–º—Å—è.")
                # üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:
                # –í –±—É–¥—É—â–µ–º ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ —Å–æ–±—ã—Ç–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, InlineQuery, ChatJoinRequest),
                # –µ—Å–ª–∏ –±–æ—Ç –±—É–¥–µ—Ç —Ä–∞—Å—à–∏—Ä—è—Ç—å—Å—è, —á—Ç–æ–±—ã –æ—Ö–≤–∞—Ç—ã–≤–∞—Ç—å –≤—Å—ë, —á—Ç–æ –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å –æ—à–∏–±–∫—É.
            except Exception as inner_e:
                logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –∏—Å–∫–ª—é—á–µ–Ω–∏–∏: %s", inner_e)
