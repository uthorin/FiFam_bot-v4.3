from aiogram import F, Router
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from bot.handlers.statistics import cmd_statistics
from bot.handlers.entry_handler import start_entry_flow  # —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ –¥–æ—Ö–æ–¥–∞/—Ä–∞—Å—Ö–æ–¥–∞
from database.db import add_user


router = Router()

@router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext, **data):
    print("START COMMAND")
    user_id = message.from_user.id
    full_name = message.from_user.full_name

    await add_user(data['db'], user_id, full_name)

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –¥–æ—Ö–æ–¥", callback_data="start_income")],
        [InlineKeyboardButton(text="‚ûñ –î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥", callback_data="start_expense")],
        [InlineKeyboardButton(text="üìä –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É", callback_data="start_stats")],
        [InlineKeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="start_help")]
    ])
    await message.answer(
        "ü¶æ –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî FiFam Bot, —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ —Ñ–∏–Ω–∞–Ω—Å–∞–º.\n"

        "–ù–µ –ø–∞–Ω–∏–∫—É–π, –º—ã –≤—Å—ë —Ä–∞–∑—Ä—É–ª–∏–º:\n"
        "‚Ä¢ –ó–∞–ø–∏—à–µ–º –¥–æ—Ö–æ–¥—ã –∏ —Ä–∞—Å—Ö–æ–¥—ã\n"
        "‚Ä¢ –ü–æ—Å–º–æ—Ç—Ä–∏–º, –∫—É–¥–∞ —É—Ç–µ–∫–∞—é—Ç –¥–µ–Ω—å–≥–∏\n"
        "‚Ä¢ –ü–æ–¥—Å–∫–∞–∂–µ–º, –∫–∞–∫ –¥–µ—Ä–∂–∞—Ç—å –±–∞–ª–∞–Ω—Å\n\n"
        "‚Ä¢ –ú–æ–∂–µ–º —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å —á–µ–∫–∏\n"
        "‚Ä¢ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ Excel\n"

        "üöÄ –ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å? –ñ–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.",
        reply_markup=keyboard
    )

@router.message(Command("help"))
@router.callback_query(F.data == "start_help")
async def cmd_help(event: Message | CallbackQuery, state: FSMContext):
    text = (
        "üÜò <b>–ü–æ–º–æ—â—å:</b>\n\n"
        "‚Äî <b>/start</b> ‚Äî –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "‚Äî <b>/stats</b> ‚Äî –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç—á—ë—Ç—ã\n"
        "‚Äî <b>/cancel</b> ‚Äî –æ—Ç–º–µ–Ω–∏—Ç—å –≤–≤–æ–¥\n"
        "‚Äî <b>/analysis</b> ‚Äî –∞–Ω–∞–ª–∏–∑ —Ä–∞—Å—Ö–æ–¥–æ–≤\n\n"
        "‚Äî <b>/export</b> ‚Äî —ç–∫—Å–ø–æ—Ä—Ç –≤ Excel\n"
        "üëá –ò–ª–∏ –≤—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:"
    )

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="start_menu")],
        [InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="start_stats")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_entry")],
    ])

    if isinstance(event, CallbackQuery):
        await event.message.edit_text(text, reply_markup=keyboard)
        await event.answer()
    else:
        await event.answer(text, reply_markup=keyboard)

@router.message(Command(commands=["–æ—Ç–º–µ–Ω–∞","cancel"]))
async def cmd_cancel(message: Message, state: FSMContext):
    await state.clear()
    await message.answer("üö´ –í–≤–æ–¥ –æ—Ç–º–µ–Ω—ë–Ω.")

@router.callback_query(F.data == "start_income")
async def start_income_callback(callback: CallbackQuery, state: FSMContext):
    await callback.message.delete_reply_markup()
    await start_entry_flow(callback.message, state, entry_type="–¥–æ—Ö–æ–¥")
    await callback.answer()

@router.callback_query(F.data == "start_expense")
async def start_expense_callback(callback: CallbackQuery, state: FSMContext):
    await callback.message.delete_reply_markup()
    await start_entry_flow(callback.message, state, entry_type="—Ä–∞—Å—Ö–æ–¥")
    await callback.answer()

@router.callback_query(F.data == "start_stats")
async def start_stats_callback(callback: CallbackQuery):
    await callback.message.delete_reply_markup()
    await cmd_statistics(callback.message)
    await callback.answer()

@router.callback_query(F.data == "start_help")
async def start_help_callback(callback: CallbackQuery):
    await callback.message.delete_reply_markup()
    await cmd_help(callback.message)
    await callback.answer()



